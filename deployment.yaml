---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rbac-synchroniser-account
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: rbac-synchroniser-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  - clusterrolebindings
  - clusterroles
  verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: rbac-synchroniser-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rbac-synchroniser-role
subjects:
- kind: ServiceAccount
  name: rbac-synchroniser-account
  namespace: kube-system

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: rbac-synchroniser
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      name: rbac-synchroniser
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
      labels:
        app: rbac-synchroniser
    spec:
      serviceAccountName: rbac-synchroniser-account
      containers:
      - name: rbac-synchroniser
        image: quay.io/yacut/kubernetes-rbac-synchroniser
        imagePullPolicy: Always
        args:
        - '-cluster-role-name=sync-test'
        - '-role-name=sync-test'
        - '-fake-group-response'
        - '-group-list=default:sync-fake@test.com'
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        resources:
            requests:
                cpu: 0
                memory: 10Mi
            limits:
                cpu: 0.1
                memory: 100Mi
